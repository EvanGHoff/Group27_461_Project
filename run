#!/bin/bash

# Check if the URL file path exists
check_url_file_path() {
    if [ ! -f "$1" ]; then
        echo "Please input install, test, or a correct file path"
        exit 1
    fi
}

# Main script
case "$1" in
    install)
        npm init -y
        if [ $? -ne 0 ]; then
            echo "npm init failed"
            exit 1
        fi

        npm install typescript --save-dev
        if [ $? -ne 0 ]; then
            echo "npm install typescript failed"
            exit 1
        fi

        npm install @types/node --save-dev
        if [ $? -ne 0 ]; then
            echo "npm install @types/node failed"
            exit 1
        fi

        npm install fs --save-dev
        if [ $? -ne 0 ]; then
            echo "npm install fs failed"
            exit 1
        fi

        npm install axios --save-dev
        if [ $? -ne 0 ]; then
            echo "npm install axios failed"
            exit 1
        fi

        npm install dotenv --save-dev
        if [ $? -ne 0 ]; then
            echo "npm install dotenv failed"
            exit 1
        fi

        npm install simple-git --save-dev
        if [ $? -ne 0 ]; then
            echo "npm install simple-git failed"
            exit 1
        fi

        exit 0
        ;;
    
    test)
        echo "Testing..."
        # Add your test command here when ready
        exit 0
        ;;
    
    *)
        if [ -z "$1" ]; then
            echo "Usage: $0 {install|test|url_file_path}"
            exit 1
        fi

        check_url_file_path "$1"
        
        # Compile the TypeScript file
        npx tsc cli.ts
        if [ $? -ne 0 ]; then
            echo "TypeScript compilation failed."
            exit 1
        fi

        rm -rf cloned_repo
        rm -f output.json
        # Run the compiled JS file with the given URL file path
        node cli.js "$1"
        if [ $? -ne 0 ]; then
            echo "Failed to execute cli.js."
            exit 1
        fi

        if [ -f output.json ]; then
            cat output.json
        else
            echo "output.json not found."
            exit 1
        fi

        exit 0
        ;;
esac
